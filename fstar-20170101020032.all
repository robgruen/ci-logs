make: Entering directory `/LinuxAgent/_work/4/s/src'
make utest
make[1]: Entering directory `/LinuxAgent/_work/4/s/src'
make all
make[2]: warning: jobserver unavailable: using -j1.  Add `+' to parent make rule.
make[2]: Entering directory `/LinuxAgent/_work/4/s/src'
mono VS/.nuget/NuGet.exe restore VS/FStar.sln
Installing 'FsLexYacc.Runtime 6.1.0'.
Installing 'FsLexYacc 6.1.0'.
Successfully installed 'FsLexYacc.Runtime 6.1.0'.
Successfully installed 'FsLexYacc 6.1.0'.
make -C VS install-packages
make[3]: Entering directory `/LinuxAgent/_work/4/s/src/VS'
[ -d packages ] || make update-nuget
mono .nuget/NuGet.exe restore FStar.sln
All packages listed in packages.config are already installed.
find packages -name '*.exe' -exec chmod +x '{}' ';'
make[3]: Leaving directory `/LinuxAgent/_work/4/s/src/VS'
xbuild /verbosity:minimal /p:Configuration=Release VS/FStar.sln
XBuild Engine Version 14.0
Mono, Version 4.4.2.0
Copyright (C) 2005-2013 Various Mono authors
Configuration: Release Platform: AnyCPU
Configuration: Release Platform: AnyCPU
Configuration: Release Platform: AnyCPU
Configuration: Release Platform: AnyCPU
Configuration: Release Platform: AnyCPU
Configuration: Release Platform: AnyCPU
Configuration: Release Platform: AnyCPU
Configuration: Release Platform: AnyCPU
compiling to dfas (can take a while...)
342 states
writing output
building tables
computing first function...time: 00:00:00.0875365
building kernels...time: 00:00:00.0828886
building kernel table...time: 00:00:00.0061328
computing lookahead relationstime: 00:00:00.4337339
building lookahead table...time: 00:00:00.1750861
building action table...state 413: shift/reduce error on SEMICOLON
state 440: shift/reduce error on BAR
state 443: shift/reduce error on LBRACE
state 444: shift/reduce error on BAR
state 455: shift/reduce error on BAR
state 531: shift/reduce error on COLON_EQUALS
state 567: shift/reduce error on LBRACE
time: 00:00:00.7164060
building goto table...time: 00:00:00.2319924
returning tables.
7 shift/reduce conflicts
723 states
139 nonterminals
140 terminals
391 productions
#rows in action table: 723
Configuration: Release Platform: AnyCPU
Configuration: Release Platform: AnyCPU
Configuration: Release Platform: AnyCPU
Configuration: Release Platform: AnyCPU
Configuration: Release Platform: AnyCPU
Configuration: Release Platform: AnyCPU
chmod a+x ../bin/tests.exe
chmod a+x ../bin/fstar.exe
make[2]: Leaving directory `/LinuxAgent/_work/4/s/src'
make fsharp-regressions
make[2]: Entering directory `/LinuxAgent/_work/4/s/src'
make[2]: warning: jobserver unavailable: using -j1.  Add `+' to parent make rule.
mono ../bin/tests.exe
Initializing ...
Testing the normalizer
0: ...
1: ...
2: ...
3: ...
4: ...
5: ...
6: ...
7: ...
8: ...
9: ...
10: ...
11: ...
12: ...
13: ...
14: ...
15: ...
16: ...
17: ...
18: ...
19: ...
20: ...
21: ...
22: ...
23: ...
Normalizer ok
Testing the unifier
0 ...
Unify x
and x

1 ...
Unify x
and y

2 ...
Unify x
and ((fun x -> x@0) x)

3 ...
Unify (fun x -> x@0)
and (fun x -> x@0)

4 ...
Unify (fun x -> x@0)
and (fun y -> y@0)

5 ...
Unify (fun x y -> x@1)
and (fun a b -> a@1)

6 ...
Unify (fun x y z -> y@1)
and (fun a b c -> b@1)

7 ...
Unify (fun x y -> y@0)
and (fun x y -> x@1)

8 ...
Unify (fun x y z -> y@1)
and (fun x y z -> z@0)

9 ...
Unify (fun x -> (?90428 x@0))
and (fun x -> (tuple2 x@0 x@0))

10 ...
Unify (fun x -> (?90433 x@0))
and (fun x y -> (op_Addition x@1 y@0))

11 ...
Unify (x:int -> y:(y#805375:int{(eq2 y@0 x@1)}) -> Tot bool)
and (x:int -> y:int -> Tot bool)

12 ...
Unify (a:Type -> b:(_:a@0 -> Type) -> x:a@1 -> y:(b@1 x@0) -> Type)
and (a:Type -> b:(_:a@0 -> Type) -> x:a@1 -> y:(b@1 x@0) -> Type)

Unifier ok
make[2]: Leaving directory `/LinuxAgent/_work/4/s/src'
make -C ocaml-output
make[2]: Entering directory `/LinuxAgent/_work/4/s/src/ocaml-output'
cp ../parser/ml/parse.mly ./parse.mly
echo 'let version = "0.9.3.1-beta"' > FStar_Version.ml
echo 'let platform = "Linux_x86_64"' >> FStar_Version.ml
echo 'let compiler = "OCaml 4.02.3"' >> FStar_Version.ml
echo 'let date = "2017-01-01T02:01:58+0000"' >> FStar_Version.ml
echo 'let commit= "b0a0543"' >> FStar_Version.ml
echo "%{" > ../parser/parse.fsy
# We are opening the same module twice but we need these modules
# open for the definition of tokens
echo "#light \"off\"" >> ../parser/parse.fsy
echo "// (c) Microsoft Corporation. All rights reserved" >> ../parser/parse.fsy
echo "open Prims" > FStar_Parser_Parse.ml
echo "open Prims" >> ../parser/parse.fsy
echo "open FStar_List" >> FStar_Parser_Parse.ml
echo "open FStar.List" >> ../parser/parse.fsy
echo "open FStar_Util" >> FStar_Parser_Parse.ml
echo "open FStar.Util" >> ../parser/parse.fsy
echo "open FStar_Range" >> FStar_Parser_Parse.ml
echo "open FStar.Range" >> ../parser/parse.fsy
echo "open FStar_Options" >> FStar_Parser_Parse.ml
echo "open FStar.Options" >> ../parser/parse.fsy
echo "open FStar_Absyn_Syntax" >> FStar_Parser_Parse.ml
echo "open FStar.Absyn.Syntax" >> ../parser/parse.fsy
echo "open FStar_Absyn_Const" >> FStar_Parser_Parse.ml
echo "open FStar.Absyn.Const" >> ../parser/parse.fsy
echo "open FStar_Absyn_Util" >> FStar_Parser_Parse.ml
echo "open FStar.Absyn.Util" >> ../parser/parse.fsy
echo "open FStar_Parser_AST" >> FStar_Parser_Parse.ml
echo "open FStar.Parser.AST" >> ../parser/parse.fsy
echo "open FStar_Parser_Util" >> FStar_Parser_Parse.ml
echo "open FStar.Parser.Util" >> ../parser/parse.fsy
echo "open FStar_Const" >> FStar_Parser_Parse.ml
echo "open FStar.Const" >> ../parser/parse.fsy
echo "open FStar.Ident" >> ../parser/parse.fsy
echo "open FStar_Ident" >> FStar_Parser_Parse.ml
echo "open FStar.String" >> ../parser/parse.fsy
echo "open FStar_String" >> FStar_Parser_Parse.ml
# TODO: create a proper OCamlbuild rule for this production so that
# TODO : fsyacc seems to complain as soon as there is an arrow -> in a %type declaration...
# OCamlbuild knows how to generate parse.mly first (possibly using
cat parse.mly | sed -e '/%{/d' \
-e '/^open /d' \
-e '/%token/s/[a-zA-Z0-9_]*\.//g' \
-e '/%type/s/[a-zA-Z0-9_]*\.//g' \
-e '/%token.*->.*/d' \
-e '/%type.*->.*/d' \
>> ../parser/parse.fsy
# menhir) and removes the production as needed.
ocamlyacc parse.mly
6 shift/reduce conflicts.
cat parse.ml >> FStar_Parser_Parse.ml
rm parse.ml parse.mli
cd ../../ && ocamlbuild -I src/ocaml-output -I src/basic/ml -I src/parser/ml -I src/fstar/ml -j 24 -build-dir src/ocaml-output/_build -I src/prettyprint/ml -I lib/ml -use-ocamlfind main.native
ocamlfind ocamldep -package batteries -package zarith -package yojson -package pprint -modules src/fstar/ml/main.ml > src/fstar/ml/main.ml.depends
+ ocamlfind ocamldep -package batteries -package zarith -package yojson -package pprint -modules src/fstar/ml/main.ml > src/fstar/ml/main.ml.depends
ocamlfind: Package `pprint' not found
Command exited with code 2.
make[2]: Leaving directory `/LinuxAgent/_work/4/s/src/ocaml-output'
make[2]: *** [fstar.exe] Error 10
make[1]: Leaving directory `/LinuxAgent/_work/4/s/src'
make[2]: Target `all' not remade because of errors.
make[1]: *** [utest] Error 2
make: Leaving directory `/LinuxAgent/_work/4/s/src'
make: *** [ulong] Error 2
